// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: notifications.proto

package pb

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "github.com/plexsysio/msuite-services/common/pb"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *SubscriberInfo) Validate() error {
	if _, ok := NotificationType_name[int32(this.Mode)]; !ok {
		return github_com_mwitkow_go_proto_validators.FieldError("Mode", fmt.Errorf(`value '%v' must be a valid NotificationType field`, this.Mode))
	}
	if this.Identifier == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Identifier", fmt.Errorf(`value '%v' must not be an empty string`, this.Identifier))
	}
	return nil
}
func (this *SubscribeReq) Validate() error {
	if this.UserId == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("UserId", fmt.Errorf(`value '%v' must not be an empty string`, this.UserId))
	}
	if len(this.Subscriptions) < 1 {
		return github_com_mwitkow_go_proto_validators.FieldError("Subscriptions", fmt.Errorf(`value '%v' must contain at least 1 elements`, this.Subscriptions))
	}
	for _, item := range this.Subscriptions {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Subscriptions", err)
			}
		}
	}
	return nil
}
func (this *Msg) Validate() error {
	return nil
}
func (this *SendReq) Validate() error {
	if _, ok := NotificationType_name[int32(this.Type)]; !ok {
		return github_com_mwitkow_go_proto_validators.FieldError("Type", fmt.Errorf(`value '%v' must be a valid NotificationType field`, this.Type))
	}
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *Notification) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *NotificationList) Validate() error {
	for _, item := range this.Items {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Items", err)
			}
		}
	}
	return nil
}
